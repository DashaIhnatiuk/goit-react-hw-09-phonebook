{"version":3,"sources":["components/Animations/slide.module.css","components/Animations/alert.module.css","components/OutputSection/OutputSection.module.css","components/AddSection/AddSection.module.css","components/Notification/Notification.module.css","views/PhoneBookView/phoneBookView.module.css","redux/phoneBook/phoneBook-operations.js","redux/phoneBook/phoneBook-selectors.js","components/Notification/index.jsx","components/AddSection/index.jsx","components/Filter/index.jsx","components/OutputSection/index.jsx","views/PhoneBookView/PhoneBookView.js"],"names":["module","exports","dispatch","a","actions","fetchContactsRequest","api","fetchContacts","data","fetchContactsSuccess","fetchContactsError","message","response","status","toast","info","error","name","number","contact","addContactRequest","addContact","addContactSuccess","addContactError","id","deleteContactRequest","deleteContact","deleteContactSuccess","deleteContactError","getAllContacts","state","contacts","items","getFilter","filter","getLoading","loading","getError","getFilteredContacts","createSelector","allContacts","toLowerCase","includes","Notification","useSelector","phoneBookSelectors","authError","authSelectors","useDispatch","useEffect","setTimeout","phoneBookActions","clearError","CSSTransition","in","timeout","classNames","notificationTransition","unmountOnExit","className","s","errorMassage","AddSection","useState","setName","setNumber","errorMessage","setErrorMessage","selectors","onAddContact","useCallback","operations","handleInput","e","target","value","resetData","container","type","placeholder","onChange","addBtn","onClick","preventDefault","some","Filter","onChangeFilter","event","changeFilter","currentTarget","style","ulSection","OutputSection","onDeleteContact","phoneBookOperations","TransitionGroup","component","map","slideTransition","liItem","text","deleteBtn","PhoneBookView","clearFilter","isLoading","appear","title","length","filterAnim","onExiting","anim","contactsWrapper"],"mappings":"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","file":"static/js/phone-book.c9f6473d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"slide_enter__3ZDQH\",\"enterActive\":\"slide_enterActive__2ILM0\",\"exit\":\"slide_exit__11fF0\",\"exitActive\":\"slide_exitActive__26IrK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"alert_enter__EotQK\",\"enterActive\":\"alert_enterActive__2HoxE\",\"exit\":\"alert_exit__S6Ssu\",\"exitActive\":\"alert_exitActive__1gMXa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"deleteBtn\":\"OutputSection_deleteBtn__2Olzp\",\"ulSection\":\"OutputSection_ulSection__8_ihX\",\"liItem\":\"OutputSection_liItem__3TQ_5\",\"text\":\"OutputSection_text__1ib-C\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"AddSection_container__38zI-\",\"addBtn\":\"AddSection_addBtn__1AoFH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorMassage\":\"Notification_errorMassage__RfOrU\",\"enter\":\"Notification_enter__tsjeX\",\"enterActive\":\"Notification_enterActive__1vf2M\",\"exit\":\"Notification_exit__p0ki6\",\"exitActive\":\"Notification_exitActive__1ClJp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"phoneBookView_container__2H_b_\",\"contactsWrapper\":\"phoneBookView_contactsWrapper__EXa7J\",\"title\":\"phoneBookView_title__3iPdh\",\"appear\":\"phoneBookView_appear__q5Kj9\",\"appearActive\":\"phoneBookView_appearActive__2AQAh\"};","import actions from './phoneBook-actions';\r\nimport api from '../../api/phoneBook-api';\r\nimport { toast } from 'react-toastify';\r\n\r\nconst fetchContacts = () => async dispatch => {\r\n  dispatch(actions.fetchContactsRequest());\r\n  try {\r\n    const { data } = await api.fetchContacts();\r\n    dispatch(actions.fetchContactsSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.fetchContactsError(error.message));\r\n    if (error.response.status === 404) {\r\n      toast.info(\"There is no such user's collection!\");\r\n    } else if (error.response.status === 500) {\r\n      toast.error('Server error! Please try later.');\r\n    } else {\r\n      toast.error('Something went wrong! Please try again!');\r\n    }\r\n  }\r\n};\r\n\r\nconst addContact = (name, number) => async dispatch => {\r\n  const contact = { name, number };\r\n\r\n  dispatch(actions.addContactRequest());\r\n  try {\r\n    const { data } = await api.addContact(contact);\r\n    dispatch(actions.addContactSuccess(data));\r\n  } catch (error) {\r\n    dispatch(actions.addContactError(error.message));\r\n    if (error.response.status === 400) {\r\n      toast.error('Contact creation error!');\r\n    } else {\r\n      toast.error('Something went wrong! Please try again!');\r\n    }\r\n  }\r\n};\r\n\r\nconst deleteContact = id => async dispatch => {\r\n  dispatch(actions.deleteContactRequest());\r\n  try {\r\n    await api.deleteContact(id);\r\n    dispatch(actions.deleteContactSuccess(id));\r\n  } catch (error) {\r\n    dispatch(actions.deleteContactError(error.message));\r\n    if (error.response.status === 404) {\r\n      toast.info(\"There is no such user's collection!\");\r\n    } else if (error.response.status === 500) {\r\n      toast.error('Server error! Please try later.');\r\n    } else {\r\n      toast.error('Something went wrong! Please try again!');\r\n    }\r\n  }\r\n};\r\n\r\nexport default { fetchContacts, addContact, deleteContact };\r\n","import { createSelector } from '@reduxjs/toolkit';\r\n\r\nconst getLoading = state => state.contacts.loading;\r\nconst getAllContacts = state => state.contacts.items;\r\nconst getFilter = state => state.contacts.filter;\r\nconst getError = state => state.contacts.error;\r\n\r\nconst getFilteredContacts = createSelector(\r\n  [getAllContacts, getFilter],\r\n  (allContacts, filter) => {\r\n    return allContacts.filter(contact =>\r\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\r\n    );\r\n  },\r\n);\r\nexport default {\r\n  getLoading,\r\n  getAllContacts,\r\n  getFilter,\r\n  getError,\r\n  getFilteredContacts,\r\n};\r\n","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './Notification.module.css';\r\nimport { connect } from 'react-redux';\r\nimport phoneBookSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport authSelectors from '../../redux/auth/auth-selectors';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport notificationTransition from \"../Animations/alert.module.css\";\r\n\r\nexport default function Notification({ message }) {\r\n  const error = useSelector(phoneBookSelectors.getError);\r\n  const authError = useSelector(authSelectors.getError);\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (error || authError) {\r\n      setTimeout(() => {\r\n        dispatch(phoneBookActions.clearError());\r\n      }, 3000);\r\n    }\r\n  }, [dispatch]);\r\n\r\n    return (\r\n      <CSSTransition\r\n        in={!!message}\r\n        timeout={250}\r\n        classNames={notificationTransition}\r\n        unmountOnExit\r\n      >\r\n        <div className={s.errorMassage}>\r\n        {message}\r\n    </div>\r\n      </CSSTransition>\r\n    );\r\n  }","import { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport s from './AddSection.module.css';\r\nimport notificationTransition from \"../Animations/alert.module.css\";\r\nimport Notification from \"../Notification\";\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/phoneBook/phoneBook-operations';\r\nimport selectors from '../../redux/phoneBook/phoneBook-selectors';\r\n\r\nexport default function AddSection() {\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n  const [errorMessage, setErrorMessage] = useState(null);\r\n\r\n  const contacts = useSelector(selectors.getAllContacts);\r\n\r\n  const dispatch = useDispatch();\r\n  const onAddContact = useCallback(\r\n    (name, number) => dispatch(operations.addContact(name, number)),\r\n    [dispatch],\r\n  );\r\n\r\n\r\n  const handleInput = e => {\r\n    const { name, value } = e.target;\r\n\r\n    switch (name) {\r\n      case 'name':\r\n        setName(value);\r\n        break;\r\n\r\n      case 'number':\r\n        setNumber(value);\r\n        break;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n\r\n    if(!name){\r\n      setErrorMessage( 'Enter name please');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);}, 3000);\r\n      return;\r\n    }\r\n\r\n    if(!number){\r\n      setErrorMessage( 'Enter number please');\r\n      setTimeout(() => {\r\n        setErrorMessage(null);}, 3000);\r\n      return;\r\n    }\r\n\r\n    if (contacts.some(contact => contact.name === name)) {\r\n      setErrorMessage('Contact already exists');\r\n\r\n      setTimeout(() => {\r\n        setErrorMessage(null);}, 3000);\r\n      resetData();\r\n      return;\r\n    }\r\n\r\n    onAddContact(name, number);\r\n    resetData();\r\n  };\r\n  const resetData = () => {\r\n    setName('');\r\n    setNumber('');\r\n  }\r\n  \r\n      return (\r\n        <div className={s.container}>\r\n          <Notification message={errorMessage} />\r\n            <p>Name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" name=\"name\"\r\n              value={name} onChange={handleInput}/>\r\n            <p>Number</p>\r\n            <input type=\"text\" placeholder=\"Enter phone number\" name=\"number\"\r\n              value={number} onChange={handleInput}/>\r\n            <button className={s.addBtn} onClick={handleSubmit}>Add contact</button>\r\n        </div>\r\n      );\r\n    }\r\n","import PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport phoneBookSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport style from \"../OutputSection/OutputSection.module.css\";\r\n\r\nexport default function Filter() {\r\n  const dispatch = useDispatch();\r\n\r\n  const onChangeFilter = useCallback(event =>\r\n    dispatch(phoneBookActions.changeFilter(event.currentTarget.value)),\r\n  );\r\n\r\n  const value = useSelector(phoneBookSelectors.getFilter);\r\n\r\n  return (\r\n    <div className={style.ulSection}>\r\n            <p>Find contacts by name</p>\r\n            <input type=\"text\" placeholder=\"Enter contact name\" name=\"filter\"\r\n            value={value} onChange={onChangeFilter}/>\r\n</div>\r\n  );\r\n}","import PropTypes from \"prop-types\";\r\nimport React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport style from \"./OutputSection.module.css\";\r\nimport { CSSTransition, TransitionGroup } from \"react-transition-group\";\r\nimport slideTransition from \"../Animations/slide.module.css\";\r\nimport phoneBookOperations from '../../redux/phoneBook/phoneBook-operations';\r\nimport phoneBookSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport { connect } from \"react-redux\";\r\n\r\nexport default function OutputSection() {\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = useCallback(\r\n    id => dispatch(phoneBookOperations.deleteContact(id)),\r\n    [dispatch],\r\n  );\r\n  const contacts = useSelector(phoneBookSelectors.getFilteredContacts);\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={style.ulSection}>\r\n      {contacts.map(({ id, name, number }) => {\r\n        return (\r\n          <CSSTransition\r\n            key={id}\r\n            timeout={250}\r\n            classNames={slideTransition}\r\n            // unmountOnExit\r\n          >\r\n            <li className={style.liItem} key={id}>\r\n              <p className={style.text}>{name} : {number}</p>\r\n              <button\r\n                className={style.deleteBtn}\r\n                onClick={() => {\r\n                  onDeleteContact(id);\r\n                }}\r\n              >\r\n                Delete\r\n              </button>\r\n            </li>\r\n          </CSSTransition>\r\n        );\r\n      })}\r\n    </TransitionGroup>\r\n  );\r\n}","import React, { useEffect, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport { connect } from 'react-redux';\r\nimport phoneBookOperations from '../../redux/phoneBook/phoneBook-operations';\r\nimport phoneBookSelectors from '../../redux/phoneBook/phoneBook-selectors';\r\nimport phoneBookActions from '../../redux/phoneBook/phoneBook-actions';\r\nimport AddSection from '../../components/AddSection';\r\nimport Filter from '../../components/Filter';\r\nimport OutputSection from '../../components/OutputSection';\r\nimport Notification from '../../components/Notification';\r\nimport MyLoader from '../../components/Loader';\r\nimport PropTypes from 'prop-types';\r\nimport s from './phoneBookView.module.css';\r\nimport anim from '../../components/Animations/slide.module.css';\r\nimport filterAnim from '../../components/Animations/slide.module.css';\r\n\r\nexport default function PhoneBookView() {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(phoneBookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n   const clearFilter = useCallback(\r\n    () => dispatch(phoneBookActions.changeFilter('')),\r\n    [dispatch],\r\n  );\r\n\r\n  const contacts = useSelector(phoneBookSelectors.getAllContacts);\r\n  const isLoading = useSelector(phoneBookSelectors.getLoading);\r\n  const error = useSelector(phoneBookSelectors.getError);\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        {error && <Notification message={error.message} />}\r\n\r\n        <CSSTransition\r\n          in={true}\r\n          appear={true}\r\n          timeout={500}\r\n          classNames={s}\r\n          unmountOnExit\r\n        >\r\n          {<h1 className={s.title}>Phonebook</h1>}\r\n        </CSSTransition>\r\n\r\n        <AddSection />\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 1}\r\n          classNames={filterAnim}\r\n          timeout={250}\r\n          unmountOnExit\r\n          onExiting={() => clearFilter()}\r\n        >\r\n          <Filter />\r\n        </CSSTransition>\r\n\r\n        <CSSTransition\r\n          in={contacts.length > 0}\r\n          appear={true}\r\n          timeout={250}\r\n          classNames={anim}\r\n          unmountOnExit\r\n        >\r\n          <div className={s.contactsWrapper}>\r\n            <h2 className={s.title}>Contacts</h2>\r\n            {isLoading && <MyLoader />}\r\n            <OutputSection />\r\n          </div>\r\n        </CSSTransition>\r\n      </div>\r\n    );\r\n}"],"sourceRoot":""}